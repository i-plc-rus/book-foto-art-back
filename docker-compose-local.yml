services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - db
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=appuser
      - DB_PASSWORD=apppass
      - DB_NAME=appdb
      - JWT_SECRET=supersecret123
      - SMTP_HOST=mail.nic.ru
      - SMTP_PORT=587
      - SMTP_USERNAME=info@bookfoto.art
      - SMTP_PASSWORD=Shalimov123!!
      - SMTP_FROM=info@bookfoto.art
      - FRONTEND_URL=https://bookfoto.art
      - AWS_REGION=us-east-1
      - AWS_BUCKET=07123e0fb22a-book-foto-art
      - AWS_ACCESS_KEY_ID=118X59R0ABESOSOVRFW6
      - AWS_SECRET_ACCESS_KEY=4S5AskQ7Qwtz3YUm2csn4QEhOSVjvfmsyUfR4chF
      - AWS_ENDPOINT=https://s3.ru1.storage.beget.cloud
      - SESSION_SECRET=secret123
      - YANDEX_CLIENT_ID=8e3396b3966c421db32bca11586e4f7f
      - YANDEX_CLIENT_SECRET=7cf1c0a122024f28a037261fa5e766f0
      - YANDEX_REDIRECT_URL=https://bookfoto.art/verification
    networks:
      - app-net

  db:
    image: postgres:15
    environment:
      POSTGRES_DB: appdb
      POSTGRES_USER: appuser
      POSTGRES_PASSWORD: apppass
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app-net

  migrate:
    image: migrate/migrate:v4.15.2
    command: -path=/migrations -database postgres://appuser:apppass@db:5432/appdb?sslmode=disable up
    volumes:
      - ./migrations:/migrations
    depends_on:
      - db
    networks:
      - app-net

volumes:
  pgdata:
networks:
  app-net:
