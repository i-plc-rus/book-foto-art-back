// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth/forgot-password": {
            "post": {
                "description": "Отправляет письмо для сброса пароля на указанный email.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Запрос на сброс пароля",
                "parameters": [
                    {
                        "description": "Email пользователя",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.ForgotPasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Письмо успешно отправлено",
                        "schema": {
                            "$ref": "#/definitions/model.BooleanResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный формат данных",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Ошибка при отправке письма",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorMessage"
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "description": "Аутентифицирует пользователя по email и паролю. При успешной аутентификации возвращает access и refresh токены для дальнейшего использования API.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Аутентификация пользователя",
                "parameters": [
                    {
                        "description": "Данные для входа в систему",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешная аутентификация",
                        "schema": {
                            "$ref": "#/definitions/model.TokenResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный формат данных",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorMessage"
                        }
                    },
                    "401": {
                        "description": "Неверные учетные данные",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorMessage"
                        }
                    }
                }
            }
        },
        "/auth/refresh": {
            "post": {
                "description": "Обновляет access токен используя refresh токен. Refresh токен должен быть действительным и не истекшим. Возвращает новый access токен.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Обновление токена доступа",
                "parameters": [
                    {
                        "description": "Refresh токен для обновления",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.RefreshRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Токен успешно обновлен",
                        "schema": {
                            "$ref": "#/definitions/model.RefreshResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный формат данных",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorMessage"
                        }
                    },
                    "401": {
                        "description": "Недействительный или истекший refresh токен",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorMessage"
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "description": "Создаёт нового пользователя в системе. Проверяет уникальность email и username. При успешной регистрации возвращает access и refresh токены для аутентификации.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Регистрация нового пользователя",
                "parameters": [
                    {
                        "description": "Данные для регистрации пользователя",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Пользователь успешно зарегистрирован",
                        "schema": {
                            "$ref": "#/definitions/model.TokenResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный формат данных",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorMessage"
                        }
                    },
                    "409": {
                        "description": "Пользователь с таким email или username уже существует",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorMessage"
                        }
                    }
                }
            }
        },
        "/auth/reset-password": {
            "post": {
                "description": "Сбрасывает пароль пользователя по одноразовой ссылке.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Сброс пароля",
                "parameters": [
                    {
                        "description": "Новый пароль",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.ResetPasswordRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Одноразовый токен для сброса пароля",
                        "name": "token",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Пароль успешно сброшен",
                        "schema": {
                            "$ref": "#/definitions/model.BooleanResponse"
                        }
                    },
                    "400": {
                        "description": "Неверный формат данных",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Ошибка при сбросе пароля",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorMessage"
                        }
                    }
                }
            }
        },
        "/auth/yandex/callback": {
            "get": {
                "description": "Обрабатывает ответ от Яндекса после успешной авторизации",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Обработка callback от Яндекс OAuth",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Код авторизации от Яндекса",
                        "name": "code",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "State параметр для безопасности",
                        "name": "state",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешная аутентификация",
                        "schema": {
                            "$ref": "#/definitions/model.YandexCallbackResponse"
                        }
                    },
                    "400": {
                        "description": "Неверные параметры",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorMessage"
                        }
                    },
                    "401": {
                        "description": "Ошибка аутентификации",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorMessage"
                        }
                    }
                }
            }
        },
        "/auth/yandex/login": {
            "get": {
                "description": "Перенаправляет пользователя на страницу авторизации Яндекса",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Перенаправление на Яндекс OAuth",
                "responses": {
                    "200": {
                        "description": "Перенаправление на Яндекс",
                        "schema": {
                            "$ref": "#/definitions/model.YandexLoginResponse"
                        }
                    }
                }
            }
        },
        "/collection/create": {
            "post": {
                "description": "Создаёт новую коллекцию для пользователя",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Collection"
                ],
                "summary": "Создать коллекцию",
                "parameters": [
                    {
                        "description": "Данные коллекции",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CreateCollectionRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.CreateCollectionResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorMessage"
                        }
                    }
                }
            }
        },
        "/collection/list": {
            "get": {
                "description": "Возвращает список коллекций пользователя",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Collection"
                ],
                "summary": "Список коллекций",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Поиск по названию коллекции",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.CollectionsListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorMessage"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorMessage"
                        }
                    }
                }
            }
        },
        "/collection/photo/{photo_id}": {
            "delete": {
                "description": "Удаляет фотографию из коллекции по ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Collection"
                ],
                "summary": "Удалить фотографию",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID фотографии",
                        "name": "photo_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.BooleanResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorMessage"
                        }
                    }
                }
            }
        },
        "/collection/short_link_info/{token}": {
            "get": {
                "description": "Возвращает информацию о короткой ссылке по токену",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Collection"
                ],
                "summary": "Получить информацию о короткой ссылке",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Токен короткой ссылки",
                        "name": "token",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "short_link_info": {
                                    "$ref": "#/definitions/model.ShortLinkInfoResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorMessage"
                        }
                    }
                }
            }
        },
        "/collection/{id}": {
            "get": {
                "description": "Возвращает информацию о коллекции по ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Collection"
                ],
                "summary": "Получить информацию о коллекции",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID коллекции",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.CollectionInfoResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorMessage"
                        }
                    }
                }
            },
            "delete": {
                "description": "Удаление коллекции по ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Collection"
                ],
                "summary": "Удалить коллекцию",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID коллекции",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.BooleanResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorMessage"
                        }
                    }
                }
            }
        },
        "/collection/{id}/cover": {
            "put": {
                "description": "Изменяет обложку коллекции на фотографию из этой коллекции",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Collection"
                ],
                "summary": "Обновить обложку коллекции",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID коллекции",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Данные для обновления обложки",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UpdateCollectionCoverRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.BooleanResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorMessage"
                        }
                    }
                }
            }
        },
        "/collection/{id}/photos": {
            "get": {
                "description": "Возвращает список фотографий в коллекции пользователя с возможностью сортировки.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Collection"
                ],
                "summary": "Получить фотографии коллекции",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID коллекции",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Сортировка. Возможные значения: uploaded_new (по дате загрузки, новые сверху), uploaded_old (по дате загрузки, старые сверху), name_az (по имени файла, A-Z), name_za (по имени файла, Z-A), random (случайный порядок). По умолчанию: uploaded_new",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.CollectionPhotosResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorMessage"
                        }
                    }
                }
            }
        },
        "/collection/{id}/publish": {
            "put": {
                "description": "Публикует коллекцию по ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Collection"
                ],
                "summary": "Публикация коллекции",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID коллекции",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.PublishCollectionResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorMessage"
                        }
                    }
                }
            }
        },
        "/collection/{id}/unpublish": {
            "put": {
                "description": "Снимает публикацию коллекции по ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Collection"
                ],
                "summary": "Снятие публикации коллекции",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID коллекции",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.BooleanResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorMessage"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorMessage"
                        }
                    }
                }
            }
        },
        "/profile/": {
            "get": {
                "description": "Возвращает данные профиля текущего пользователя",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "Получить профиль пользователя",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ProfileResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorMessage"
                        }
                    }
                }
            }
        },
        "/public/collection/{token}/photos": {
            "get": {
                "description": "Возвращает публичную коллекцию по токену с возможностью сортировки.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Public"
                ],
                "summary": "Получить публичную коллекцию",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Токен короткой ссылки",
                        "name": "token",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Сортировка. Возможные значения: uploaded_new (по дате загрузки, новые сверху), uploaded_old (по дате загрузки, старые сверху), name_az (по имени файла, A-Z), name_za (по имени файла, Z-A), random (случайный порядок). По умолчанию: uploaded_new",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.PublicCollectionResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorMessage"
                        }
                    }
                }
            }
        },
        "/s/{token}": {
            "get": {
                "description": "Перенаправляет на публичную коллекцию по токену",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Public"
                ],
                "summary": "Перенаправление на публичную коллекцию",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Токен короткой ссылки",
                        "name": "token",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "302": {
                        "description": "Found"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorMessage"
                        }
                    }
                }
            }
        },
        "/upload/files": {
            "post": {
                "description": "Загружает файлы в коллекцию",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Upload"
                ],
                "summary": "Загрузка файлов",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID коллекции",
                        "name": "collection_id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Файлы для загрузки",
                        "name": "files",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.UploadFilesResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.ErrorMessage"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.BooleanResponse": {
            "type": "object",
            "properties": {
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "model.CollectionInfoResponse": {
            "type": "object",
            "properties": {
                "count_photos": {
                    "type": "integer"
                },
                "cover_thumbnail_url": {
                    "type": "string"
                },
                "cover_url": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string",
                    "example": "2025-0715:12:00Z"
                },
                "date": {
                    "type": "string",
                    "example": "2025-07-20T00:00:00Z"
                },
                "id": {
                    "type": "string",
                    "example": "06301788-e325-488f-94b5-1711e211b82a"
                },
                "is_published": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string",
                    "example": "My Collection"
                },
                "user_id": {
                    "type": "string",
                    "example": "06301788-e325-488f-94b5-1711e211b82a"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "model.CollectionPhotosResponse": {
            "type": "object",
            "properties": {
                "files": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.UploadedFile"
                    }
                },
                "sort": {
                    "type": "string",
                    "example": "uploaded_new"
                }
            }
        },
        "model.CollectionsListResponse": {
            "type": "object",
            "properties": {
                "collections": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.CollectionInfoResponse"
                    }
                }
            }
        },
        "model.CreateCollectionRequest": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string",
                    "example": "2025-07-28T00:00:00Z"
                },
                "name": {
                    "type": "string",
                    "example": "My Collection"
                }
            }
        },
        "model.CreateCollectionResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": "06301788-e325-488f-94b5-1711e211b82a"
                }
            }
        },
        "model.ErrorMessage": {
            "description": "Структура для сообщений об ошибках API",
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Invalid credentials"
                }
            }
        },
        "model.ForgotPasswordRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "user1@example.com"
                }
            }
        },
        "model.LoginRequest": {
            "description": "Структура запроса для входа в систему",
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "user1@example.com"
                },
                "password": {
                    "type": "string",
                    "example": "password123"
                }
            }
        },
        "model.ProfileResponse": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "user1@example.com"
                },
                "id": {
                    "type": "string",
                    "example": "06301788-e325-488f-94b5-1711e211b82a"
                }
            }
        },
        "model.PublicCollectionResponse": {
            "type": "object",
            "properties": {
                "collection_name": {
                    "type": "string"
                },
                "count_photos": {
                    "type": "integer"
                },
                "cover_thumbnail_url": {
                    "type": "string"
                },
                "cover_url": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "photos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.UploadedFile"
                    }
                },
                "sort": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "model.PublishCollectionResponse": {
            "type": "object",
            "properties": {
                "link": {
                    "type": "string",
                    "example": "https://book-foto-art.ru/s/e325488f-94b5-1711e211b82a"
                }
            }
        },
        "model.RefreshRequest": {
            "description": "Структура запроса для обновления токена доступа",
            "type": "object",
            "required": [
                "refresh_token"
            ],
            "properties": {
                "refresh_token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
                }
            }
        },
        "model.RefreshResponse": {
            "description": "Структура ответа при успешном обновлении токена",
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
                }
            }
        },
        "model.RegisterRequest": {
            "description": "Структура запроса для регистрации пользователя в системе",
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "user1@example.com"
                },
                "password": {
                    "type": "string",
                    "example": "password123"
                },
                "username": {
                    "type": "string",
                    "example": "user1"
                }
            }
        },
        "model.ResetPasswordRequest": {
            "type": "object",
            "properties": {
                "new_password": {
                    "type": "string",
                    "example": "password123"
                }
            }
        },
        "model.ShortLinkInfoResponse": {
            "type": "object",
            "properties": {
                "click_count": {
                    "type": "integer",
                    "example": 100
                },
                "collection_id": {
                    "type": "string",
                    "example": "06301788-e325-488f-94b5-1711e211b82a"
                },
                "created_at": {
                    "type": "string",
                    "example": "2025-0715:12:00Z"
                },
                "id": {
                    "type": "string",
                    "example": "06301788-e325-488f-94b5-1711e211b82a"
                },
                "token": {
                    "type": "string",
                    "example": "e325488f-94b5-1711e211b82a"
                },
                "url": {
                    "type": "string",
                    "example": "https://book-foto-art.ru/s/e325488f-94b5-1711e211b82a"
                }
            }
        },
        "model.TokenResponse": {
            "description": "Структура ответа с access и refresh токенами",
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
                },
                "refresh_token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
                }
            }
        },
        "model.UpdateCollectionCoverRequest": {
            "type": "object",
            "properties": {
                "photo_id": {
                    "type": "string",
                    "example": "06301788-e325-488f-94b5-1711e211b82a"
                }
            }
        },
        "model.UploadFilesResponse": {
            "type": "object",
            "properties": {
                "files": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.UploadedFile"
                    }
                }
            }
        },
        "model.UploadedFile": {
            "type": "object",
            "properties": {
                "collection_id": {
                    "type": "string",
                    "example": "06301788-e325-488f-94b5-1711e211b82a"
                },
                "file_ext": {
                    "type": "string"
                },
                "file_name": {
                    "type": "string"
                },
                "hash_name": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "example": "06301788-e325-488f-94b5-1711e211b82a"
                },
                "original_url": {
                    "type": "string"
                },
                "thumbnail_url": {
                    "type": "string"
                },
                "uploaded_at": {
                    "type": "string",
                    "example": "2025-0715:12:00Z"
                },
                "user_id": {
                    "type": "string",
                    "example": "06301788-e325-488f-94b5-1711e211b82a"
                }
            }
        },
        "model.YandexCallbackResponse": {
            "description": "Структура ответа с данными пользователя после успешной аутентификации",
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
                },
                "refresh_token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
                },
                "user": {
                    "type": "object",
                    "properties": {
                        "email": {
                            "type": "string",
                            "example": "user1@example.com"
                        },
                        "id": {
                            "type": "string",
                            "example": "06301788-e325-488f-94b5-1711e211b82a"
                        },
                        "username": {
                            "type": "string",
                            "example": "user1"
                        }
                    }
                }
            }
        },
        "model.YandexLoginResponse": {
            "description": "Структура ответа с URL для перенаправления на Яндекс OAuth",
            "type": "object",
            "properties": {
                "url": {
                    "type": "string",
                    "example": "https://oauth.yandex.ru/authorize?response_type=code\u0026client_id=1234567890\u0026redirect_uri=http://localhost:8080/auth/yandex/callback\u0026state=1234567890"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "api.bookfoto.art",
	BasePath:         "/",
	Schemes:          []string{"https"},
	Title:            "BookFotoArt API",
	Description:      "API для сервиса BookFotoArt",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
